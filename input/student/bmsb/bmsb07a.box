// bmsb07a.box (20 Nov 2018; Byju N Govindan) # submodels in bmsb05a.box used basal threshold temperature values from non-linear optimSSI model fit to phenology data (Nielsen et al. 2008); but CDD values are from linear model
											// Not sure if that would make any sense. Additionally, Byju's data suggest that egg-N5 stages of MN acclimated BMSB can develop at 36C, though mortality is significantly high with N4 and N5.
											// So Tmax values less than 36C used in submodels does not make any sense. 
											// Until new data is generated, lets stick with T0 and Topt values proposed by Nielsen et al. (2008); For Tmax we will use 37C.
											// Used those values in bmsb05b.box script/
											//Lets build bmsb06a.box script with mortality rates; but how to go about these?
											//As a next step,bmsb07a.box script has the non-linear temperature dependent development and mortality module incorporated
Simulation sim {								 
  .steps = 365
  Calendar calendar {
    .timeStep = 1
    .timeUnit = "d"
    .initialDateTime = 1/1/2015  					// Denotes biofix; could be later reset to a more variable location specific first date of long day condition (>13.5 hrs sun light)
  }
  Records weather {
    .fileName = "weather/2015MSP14922Stn.txt"   	// Weather data file
  }
  Box pest {
	Stage egg {										// Stage egg of pest box class ; The pest modeled here is brown marmorated stink bug (bmsb) 
      .initial = 28  								// let's start the simulation with 28 eggs laid by one BMSB adult
	  //the duration of the Stage box to 1, since we work with straight rate summation in the case of non-linear models like SSI or Briere,rather than a temperature sum as in a DayDegrees box.
      .duration = 1								    // It takes 56.47 CDD as per the linear model fitted to data (Nielsen et al. 2008); In SSI, duartion is 1
      .timeStep = ./time[value]						//time[value]????? value denotes output from time submodel
        OnOff time { 
        .x = calendar[dayOfYear]
        .xOn = 145    // 1 denotes 1 Jan // 121 and 145 denotes 1st May and 25th May // 152 denotes June 01 around which females start laying eggs, depending again on weather
        .xOff = 365 //  [later incorporate pre-season adult mortlaity rate]
        .valueOn = ./EggDevRate[devrate]
        .valueOff = 0
		//These are parameters to estimate daily developmental rates; convert to hourly developmental rates when weather data is scaled to hourly values
			SSIDevRate EggDevRate { 
         // .T = weather[Tavg]
          .TPhi =  2.979923e+02
		  .rhoPhi = 1.656960e-01
          .HA = 2.157643e+04
          .HL = -8.027841e+05
          .HH = 1.124293e+06
          .TL = 2.872947e+02
          .TH = 3.061874e+02
		  .dailytempC=weather[Tavg]
		}
		SOEPMortRate EggMortRate{
		.a0 = 41.56002
		.a1 = -4.38191
		.a2 = 0.09060
		.dailytempC=weather[Tavg]
		}
			
			
			// DayDegrees dayDegrees {				// i.e., time submodel retrieve avereage temperature data from weather file and computes CDD on each day above the basal T0 
				// .T0 = 13.93						// Obtained from linear model fit to Nielsen et al. (2008) data for the temp raning from 15-30C
				// .Topt = 25.00					// T0, Topt and Tmax denotes basal, optimal and upper temperature thresholds for bmsb development (Nielsen et al. 2008)
				// .Tmax = 37.00   				    // Topt and Tmax denotes optimal and upper temperature thresholds for development, and are not estimated by linear model	
				// .T = weather[Tavg]				// Tavg is the average daily temperature data, which is the output of the weather submodel of the object class Records
			// }
		}
    }
	Box larva {										// input for the larva box class of the pest boxclass is the output from egg submodel of the pest box class 
			
			//DayDegrees sub-model computes linear day-degrees 
			//As a first step, values for temperature thresholds and duration in DD in bmsb04a.box were taken from linear models fit to Nielsen et al.(2008) data
			//For details on the linear model fits and corresponding outputs, see the file "day-degrees.R"
			
		Stage Instar1 {
		
		    .inflow = ../../egg[outflow]		
			.duration = 1 // It takes 17.01 days at 17C and 4.82 days at 25C
			.timeStep = ./N1DevRate[devrate]
			//These are parameters to estimate daily developmental rates; convert to hourly developmental rates when weather data is scaled to hourly values
			SSIDevRate N1DevRate {
				.dailytempC=weather[Tavg]
				.TPhi = 2.979558e+02
				.rhoPhi = 1.925845e-01
				.HA = 1.545986e+04
				.HL = -9.325785e+04
				.HH = 6.142031e+04
				.TL = 2.892236e+02
				.TH = 3.109590e+02	
				
			}
			//These are parameters to estimate daily mortality rates; convert to hourly mortality rates when weather data is scaled to hourly values
			SOEPMortRate N1MortRate{
			.dailytempC=weather[Tavg]
			.a0 = 10.375011
			.a1 = -1.296379
			.a2 = 0.027049
		
			}
			// DayDegrees time {
				// .T0 = 14.17
				// .Topt = 25.00
				// .Tmax = 37.00
				// .T = weather[Tavg]
			// }
		}
		Stage Instar2 {
			.inflow = ../Instar1[outflow]		
			.duration = 1  
			.timeStep = ./N2DevRate[devrate]
			//These are parameters to estimate daily developmental rates; convert to hourly developmental rates when weather data is scaled to hourly values
			SSIDevRate N2DevRate {
				.dailytempC=weather[Tavg]
				.TPhi = 2.971631e+02
				.rhoPhi = 9.660395e-02
         		.HA = 1.578316e+04
				.HL = -1.043587e+05
				.HH = 8.828240e+04
				.TL = 2.889641e+02
				.TH = 3.071203e+02	
			}
			//These are parameters to estimate daily mortality rates; convert to hourly mortality rates when weather data is scaled to hourly values			
			SOEPMortRate N2MortRate{
			.a0 = 6.074215
			.a1 = -0.894208
			.a2 = 0.018926
			.dailytempC=weather[Tavg]
			}
			// DayDegrees time {
				// .T0 = 14.17
				// .Topt = 25.00
				// .Tmax = 37.00				
				// .T = weather[Tavg]
			// }
		}
		Stage Instar3 {
			.inflow = ../Instar2[outflow]
			.duration = 1  // It takes 22.40 days at 17C, 7.08 days at 25C and 11.78 days at 20C 
			.timeStep = ./N3DevRate[devrate]
			//These are parameters to estimate daily developmental rates; convert to hourly developmental rates when weather data is scaled to hourly values
			SSIDevRate N3DevRate {
				.dailytempC=weather[Tavg]
				.TPhi = 2.953066e+02
    			.rhoPhi = 1.117509e-01
         		.HA = 1.882645e+04
				.HL = -1.145918e+05
         		.HH = 7.663071e+04
         		.TL = 2.887001e+02
         		.TH = 3.047975e+02	
			}
			//These are parameters to estimate daily mortality rates; convert to hourly mortality rates when weather data is scaled to hourly values
			SOEPMortRate N3MortRate{
			.dailytempC=weather[Tavg]
			.a0 = 3.044201
			.a1 = -0.656247
			.a2 = 0.014576
			}
			// DayDegrees time {
				// .T0 = 14.17
				// .Topt = 25.00
				// .Tmax = 37.00
				// .T = weather[Tavg]
			// }
		}
		Stage Instar4 {
			.inflow = ../Instar3[outflow]				
			.duration = 1  // It takes 23.0 days at 17C, 7.38 days at 25C and 13.66 days at 20C
			.timeStep = ./N4DevRate[devrate]
			//These are parameters to estimate daily developmental rates; convert to hourly developmental rates when weather data is scaled to hourly values
			SSIDevRate N4DevRate {
				.dailytempC=weather[Tavg]
				.TPhi = 2.953226e+02
				.rhoPhi = 1.016579e-01
				.HA = 2.105302e+04
				.HL = -7.964424e+04
				.HH = 7.410893e+04
				.TL = 2.869091e+02
				.TH = 3.047531e+02	
			}
			SOEPMortRate N4MortRate{
			.dailytempC=weather[Tavg]
			.a0 = -7.161738
			.a1 = 0.050937 
			.a2 = 0.002179
			}	
			// DayDegrees time {
				// .T0 = 14.17
				// .Topt = 25.00
				// .Tmax = 37.00
				// .T = weather[Tavg]
			// }
		}
		Stage Instar5 {
			.inflow = ../Instar4[outflow]				
			.duration = 1 // It takes 28.0 days at 17 C, 10.44 days at 25C and 20.16 days at 20C 
			.timeStep = ./N5DevRate[devrate]
			//These are parameters to estimate daily developmental rates; convert to hourly developmental rates when weather data is scaled to hourly values
			SSIDevRate N5DevRate {
				.dailytempC=weather[Tavg]
				.TPhi = 2.942731e+02
				.rhoPhi = 6.333142e-02
				.HA = 2.138867e+04
				.HL = -7.969741e+04
				.HH = 8.131687e+04
				.TL = 2.844408e+02
				.TH = 3.046380e+02	
			}
			//These are parameters to estimate daily mortality rates; convert to hourly mortality rates when weather data is scaled to hourly values			
			SOEPMortRate N5MortRate{
			.dailytempC=weather[Tavg]
			.a0 = -7.472869
			.a1 = 0.062566
			.a2 = 0.001761
			}
			// DayDegrees time {
				// .T0 = 14.17
				// .Topt = 25.00
				// .Tmax = 37.00
				// .T = weather[Tavg]
			// }
		}
		
	}
	Box adult {
      Stage adult {
        .inflow = ../../larva/Instar5[outflow]		// input for the adult submodel of BMSB boxclass is the output from instar5 sub-model of larva box class which inturn is child of pest box class 
        .duration = 100								// BMSB adults live about 100 days (its a guestimate; but have observed data from experiemnts in hand)
        .timeStep = 1								// Here timestep is assumed 1, means each day is counted one time step
      }
      Stage preOviposition {
		.inflow = ../../larva/Instar5[outflow]
        .duration = 60								// BMSB adults live about 100 days (its a guestimate; but have observed data from experiemnts in hand)
		.timeStep = ./time[step]					// Same as line 14; Specifically, each time step corresponds to degree-days accumulated on a given day
		DayDegrees time {
        .T0 = 18.00
        .Topt = 25									// T0, Topt and Tmax denotes basal, optimal and upper temperature thresholds for bmsb development (Nielsen et al. 2008)
        .Tmax = 37.00								// Hardly 1-2 eggmass were laid at 36C in 6 weeks of lifespan. Adults died out in 2 weeks at 39C. So lets use 37C
        .T = weather[Tavg]
		}
	  }
      Stage oviposition {
        .inflow = ../preOviposition[outflow]
        //.duration = 1
        //.timeStep = 1
		.duration = 10
	    .timeStep = ./time[step]
        .growthFactor = 106		
		DayDegrees time {
        .T0 = 18.00
        .Topt = 25									// T0, Topt and Tmax denotes basal, optimal and upper temperature thresholds for bmsb development (Nielsen et al. 2008)
        .Tmax = 37.00
        .T = weather[Tavg]
		}
      }      
    }
  }
  OutputR {
    PageR {
      .xAxis = calendar[date]
      .ncol = 1
      PlotR {
        .ports = *[content]
        .ggplot = "geom_line(size=1.1) + 
                    scale_x_datetime(
                      breaks = date_breaks('months'), 
                      labels = date_format('%b')
                    )" 
      }
		// PlotR {
        // .ports = *[outflowTotal]
        // .ggplot = "geom_line(size=1.1) + 
                    // scale_x_datetime(
                      // breaks = date_breaks('months'), 
                      // labels = date_format('%b')
                    // )" 
      // }
	  // PlotR {
        // .ports = (weather[Tavg])
        // .ggplot = "geom_line(size=1.1) + 
                    // scale_x_datetime(
                      // breaks = date_breaks('months'), 
                      // labels = date_format('%b')
                    // )" 
      // }
    }
  }
}

