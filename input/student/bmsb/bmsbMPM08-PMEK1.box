// bmsbMPM08-PMEK2.box (26 May 2020; Byju N Govindan)           // PMEK stands for Process Model based on Enzyme Kinetics approach

Simulation sim {                            
  .steps = 365
  Calendar calendar {
    .timeStep = 1
    .timeUnit = "d"
    .initialDateTime = 1/1/2015        // Denotes biofix; later reset to a more variable location-specific first date of long day condition (>13.5 hrs sun light)
  } 
  Records weather {
    .fileName = "weather/2015MSP14922Stn.txt"   // Weather data file
  }
  Box pest {
    Box adult {
      // Adults in diapause stage, terminates the diapuse when day length >13.5 hours and after some heat units are accumulated above 17C 
      Stage diapause {
        .initial = 28
        .duration = 5            
        .timeStep = ./time[value]
        OnOff time { 
        .x = calendar[dayLength]
        .xOn = 13.5 // >=13.5 hrs daylength leads to diapause; roughly corresponds to Julian date 105 (i.e., 15 April)
        .xOff = 24  // <=24 hrs daylength
        .valueOn = ./dayDegrees[step]
        .valueOff = 0
          DayDegrees dayDegrees {
          . T0 = 17
          . T = weather[Tavg]
          }
        }
      }
      //Adults enter into Pre-oviposition period only when day length >13.5 hrs and they start to mature reproductively as function of tempertaure
      Stage preoviposition {
        .inflow = ../diapause[outflow]             
        .duration = 0.08                           // 60CDD/(60+436+200)CDD= 0.0862
        .timeStep = AdultSenescenceRate[devrate]   
        //Polynomial Model to Describe Adult Senescence
        Poly4DevRate AdultSenescenceRate{ // apply when tempertaure is >7.55 C and < 39 C
        .a0 = 3.626e-01
        .a1 = -6.878e-02
        .a2 = 4.796e-03
        .a3 = -1.441e-04
        .a4 = 1.586e-06
        .dailytempC = weather[Tavg]
        }
        // Polynomial Model to Describe Adult Pre-oviposition Period  // Need to Change this model to Beta function
        Poly2Model AdultPOP{
        .a0 = 228.61208
        .a1 = -15.04058
        .a2 = 0.25721
        .dailytempC=weather[Tavg]
        }
      }
      
      
    //Adults that complete pre-oviposition period (>13.5 hrs daylight) starts mating and ovipositing, but all adults of any generation stops oviposition when daylight <13.5 hours and avg. temperature <17C
    // Adults of each generation shall be tracked separately. First generation adults emerge from mid/late July - mid/late August 
    // First Generation adults lay eggs until September 4 (first week of Sept) and stops afterwards as day length <13.5 hrs and temp <17C 
    // about 5-6 % of those eggs develops to second generation adults emerging in very late Sept - mid October, and rest of developing nymphs will continue to develop and most nymphs will freeze die later
    // First generation adults will eventually die as they are vitellogenic ,and cannot diapause
    // Second generation adults must split here into two groups and tracked seperately for each year by generation ... 
    // Nymphs are the stages that recieve photoperiod cue for diapause; those one's recieved the cue turns non-vitellogenic and others turn vitellogenic (will deal later)
    // Vitellogenic adults may die faster than non-vitellogenic ones; my guess is that surviving ones of both fraction will lay eggs next year
            // Or the non-vitellogenic ones that only survives to the next year to continue the dynamics
    
      Stage oviposition {
        .inflow = ../preoviposition[outflow]
        .duration = 0.47              // 330/(60+436+150) = 0.4741 assumed avg. 95 CDD for APOP, avg. 330 CDD for egglaying period; avg. 436 CDD for egg-to new adult emergence; previous adults should have about avg. 150 CDD left before they dies
        .timeStep = AdultSenescenceRate[devrate]
        //.growthFactor = 106    

      
        FecundityEVF AdultOP{
        .a = 333.478
        .b =  23.854
        .k =  4.127
        .dailytempC=weather[Tavg]
        
        }// end of FecundityEVF AdultOP
        
        
      } //end of Stage oviposition
    
    
    
      
    }// end of Box adult
      
      
      
      Stage egg {
        .inflow = ../adult/oviposition[outflow]    
        .duration = 1 
        .timeStep = ./EggDevRate[devrate]
          
        
        
        //These are parameters from SchoolfieldHigh model to estimate developmental rates; convert to hourly developmental rates when weather data is scaled to hourly values    
            
          //Enzyme-kinetics based Development Rate Model (SchoolfieldHigh)
            
          SchoolFieldHighDevRate EggDevRate { 
          .TPhi = 298
          .rhoPhi = 0.276
          .HA = 34823.692
          .HH = 57331.493
          .TH = 302.101
          .R = 1.987
          .dailytempC=weather[Tavg]
          }// end of SchoolFieldHighDevRate EggDevRate

      
            
        //These are parameters to estimate daily survival rates and then convert to mortality rates; convert to hourly mortality rates when weather data is scaled to hourly values
            
          // Mortality Model
            
          
          ExtremeValFunc EggMortRate{
          .k1 = 1.04509
          .Tmax = 25.55107
          .rho = -12.74007
          .dailytempC=weather[Tavg]
          }//end of ExtremeValFunc EggMortRate



          
      }
      
      
      Box nymph {        // input for the nymph box class of the pest boxclass is the output from egg submodel of the pest box class 
    
  
        Stage instar1 {
          .inflow = ../../egg[outflow]    
          .duration = 1 //51.38 (CDD of 51.38331 based on Byju's BMSB data)
          .timeStep = ./N1DevRate[devrate]
          
        
        
        
          
        //These are parameters from SchoolfieldHigh model to estimate developmental rates;; convert to hourly developmental rates when weather data is scaled to hourly values    
            
          //Enzyme-kinetics based Development Rate Model (SchoolfieldHigh)
            
          SchoolFieldHighDevRate N1DevRate { 
          .TPhi = 298
          .rhoPhi = 3.109e-01
          .HA = 3.299e+04
          .HH = 4.570e+04
          .TH = 3.013e+02
          .R = 1.987
          .dailytempC=weather[Tavg]
          }


            
          
        //These are parameters to estimate daily survival rates and then convert to mortality rates; convert to hourly mortality rates when weather data is scaled to hourly values
        
          // Mortality Model
          
          ExpPoly2MortRate N1MortRate{
          .a0 = 10.78760
          .a1 = -1.23426
          .a2 = 0.02531
          .dailytempC=weather[Tavg]
          }


          
      }
  
  
        Stage instar2 {
          .inflow = ../instar1[outflow]    
          .duration = 1  // 112.94 (CDD of 112.9351 based on Byju's BMSB data)
          .timeStep = ./N2DevRate[devrate]
        
        
      
        
        
        //These are parameters from SchoolField model to estimate developmental rates;; convert to hourly developmental rates when weather data is scaled to hourly values
          
          //Enzyme-kinetics based Development Rate Model (SchoolField Model)
          
          SchoolFieldDevRate N2DevRate {
          .TPhi = 298
          .rhoPhi = 3.734e-01
          .HA = 3.990e+04
          .HL = 3.311e+04
          .HH = 9.835e+05
          .TL = 2.930e+02
          .TH = 3.087e+02
          .R = 1.987
          .dailytempC=weather[Tavg]  
          }

          
          
        
        
        //These are parameters to estimate daily survival rates and then convert to mortality rates; convert to hourly mortality rates when weather data is scaled to hourly values
          
          // Mortality Model  
          
          ExpPoly2MortRate N2MortRate{
          .a0 = 28.486643
          .a1 = -2.670804
          .a2 = 0.051443
          .dailytempC=weather[Tavg]
          }
          
          
                      
      }
      
      
      Stage instar3 {
        .inflow = ../instar2[outflow]
        .duration = 1  // 87.42 (CDD of 87.41702 based on Byju's BMSB data)
        .timeStep = ./N3DevRate[devrate]
    
    
        
        //These are parameters from SchoolfieldHigh model to estimate developmental rates;; convert to hourly developmental rates when weather data is scaled to hourly values    
            
          //Enzyme-kinetics based Development Rate Model (SchoolfieldHigh)
            
          SchoolFieldHighDevRate N3DevRate { 
          .TPhi = 298
          .rhoPhi = 1.983e-01
          .HA = 3.113e+04
          .HH = 5.449e+04
          .TH = 3.015e+02
          .R = 1.987
          .dailytempC=weather[Tavg]
          }  


        

          
        //These are parameters to estimate daily survival rates and then convert to mortality rates; convert to hourly mortality rates when weather data is scaled to hourly values
          
          // Mortality Model
          
          ExpPoly2MortRate N3MortRate{
          .a0 = 9.168498
          .a1 = -0.948087
          .a2 = 0.018867
          .dailytempC=weather[Tavg]
          }



      }
  
  
      Stage instar4 {
        .inflow = ../instar3[outflow]        
        .duration = 1  // 78.33 (CDD of 78.32516 based on Byju's BMSB data) 
        .timeStep = ./N4DevRate[devrate]
    
    

        
        //These are parameters from SchoolfieldHigh model to estimate developmental rates;; convert to hourly developmental rates when weather data is scaled to hourly values    
            
          //Enzyme-kinetics based Development Rate Model (SchoolfieldHigh)
            
          SchoolFieldHighDevRate N4DevRate { 
          .TPhi = 298
          .rhoPhi = 3.962e-01
          .HA = 4.230e+04
          .HH = 5.042e+04
          .TH = 2.965e+02
          .R = 1.987
          .dailytempC=weather[Tavg]
          }  


                      
      
          
        //These are parameters to estimate daily survival rates and then convert to mortality rates; convert to hourly mortality rates when weather data is scaled to hourly values
          
          // Mortality Model
          
          ExpPoly2MortRate N4MortRate{
          .a0 = 13.41368
          .a1 = -1.25998 
          .a2 = 0.02423
          .dailytempC=weather[Tavg]
          }
          
          
          
      }
      
      
      Stage instar5 {
        .inflow = ../instar4[outflow]        
        .duration = 1 //  115.86 (CDD of 115.864 based on Byju's BMSB data) 
        .timeStep = ./N5DevRate[devrate]
        
        

        
        //These are parameters from SchoolfieldHigh model to estimate developmental rates;; convert to hourly developmental rates when weather data is scaled to hourly values    
            
          //Enzyme-kinetics based Development Rate Model (SchoolfieldHigh)
            
          SchoolFieldHighDevRate N5DevRate { 
          .TPhi = 298
          .rhoPhi = 1.991e-01
          .HA = 3.219e+04
          .HH = 4.428e+044
          .TH = 2.988e+02
          .dailytempC=weather[Tavg]
          }  


    
          
          
        //These are parameters to estimate daily survival rates and then convert to mortality rates; convert to hourly mortality rates when weather data is scaled to hourly values      
          
          
          // Mortality Model
          
          ExpPoly4MortRate N5MortRate{
          .a0 = -1.494e+02
          .a1 = 2.923e+01
          .a2 = -2.028e+00
          .a3 = 5.857e-02
          .a4 = -5.998e-04
          .dailytempC=weather[Tavg]
          }
          

          
      }
  
    }
    
      
      
      
      
  }// end of Box Pest
  
  
  
  
  OutputR {
    PageR {
      .xAxis = calendar[date]
      .ncol = 1
        PlotR {
          .ports = *[content]
          .ggplot = "geom_line(size=1.1) + 
          scale_x_datetime(
          breaks = date_breaks('months'), 
          labels = date_format('%b')
          )" 
        }// end of PlotR
        
        // PlotR {
            // .ports = *[outflowTotal]
            // .ggplot = "geom_line(size=1.1) + 
            // scale_x_datetime(
            // breaks = date_breaks('months'), 
            // labels = date_format('%b')
            // )" 
        // }// end of PlotR
  
        // PlotR {
            // .ports = (weather[Tavg])
            // .ggplot = "geom_line(size=1.1) + 
            // scale_x_datetime(
            // breaks = date_breaks('months'), 
            // labels = date_format('%b')
            // )" 
        // } // end of PlotR
        
        
    }//end of PageR
    
    
  }// end of OutputR
  
} // end of Simulation Sim