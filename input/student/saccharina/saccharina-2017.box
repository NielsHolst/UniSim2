Simulation sim {
  .steps = 6288
  Box inputs {
    +Cinit = 0.1 //0.3
    +Ninit = 0.02 //0.022
    +Ainit = 0.0025 //0.1
    +Iden = 440 //400 (not in original model)
  }
  Box parameters {
    +Nmin = 0.01 //Minimum nitrogen reserve
    +A0 =  6 //Growth rate adjustment parameter
    +m1 = 0.004519 //growthrate parameter (pr hour)
    +m2 = 0.00125 //growthrate parameter (pr hour)
    +a = 0.72 //Nutrient uptake parameter
    +b = 0.28 //Nutrient uptake parameter - ensures uptake at low current speeds
    +U0 = 0.045 //Effect of current speed on nutrient uptake 0.045
    +KX = 4 //Nitrate uptake half saturation constant
    +Jmax = 0.00014 //Maximal nitrate uptake rate
    +a1 = 0.85 //photoperiodic parameter
    +a2 = 0.3 //photoperiodic parameter
    +eps = 0.22 //Frond erosion parameter
    +gamma = 0.5 //Carbon exudation parameter
  }  
  Calendar calendar {
    .initialDateTime = "2017-09-21 00:05:00"
    .timeUnit = "h"
    .latitude = 56.25  //Niels
  }
  Sun sun {
  }
  Records env {
    .fileName = "env_file_2017.txt"
  }
  Carboncontent carboncontent {
    .Cinit =  inputs[Cinit]
    .carbonreservesrate = rateofchangeincarbonreserves[carbonreservesrate]
  }
  Carbonexudation carbonexudation {
    .C = carboncontent[C]
  }
  Nitrogencontent nitrogencontent {
    .Ninit = inputs[Ninit]
    .nitrogenreservesrate = rateofchangeinnitrogenreserves[nitrogenreservesrate]
  }
  Fronderosion fronderosion {
    .A = area[A]
  .eps = parameters[eps]
  }
  Temperaturedepententrespiration respiration {
    .T = env[T]
  }
  LightInhibition beta {
    .Pmax = maxphotoreftemp[maxphotosynthesisreftemp]
    .guessBeta = 1e-9
    .report = FALSE
  }  
  Photosynthesis photo  {
    .beta = beta[beta]
  }  
  Maximalphotosynthesisratereftemp maxphotoreftemp {
    .T = env[T]
  }
  Grossphotosynthesis grossphotosynthesis {
    .PS = photo[photosynthesis]
    .beta = beta[beta]
    .I = env[I]
  }
  Nitrateuptakerate nitrateuptakerate {
    .X = env[N]
    .N = nitrogencontent[N]
    .U = env[U]
    .Nmin =  parameters[Nmin] 
  .a = parameters[a]
  .b = parameters[b]
  .U0 = parameters[U0]
  .KX = parameters[KX]
  .Jmax = parameters[Jmax]
  }  
  Seasonalinfluenceongrowthrate fphoto {
    .dayLength = sun[dayLength]
    .maxDayLengthChange = 0.07832
    .a1 = parameters[a1]
    .a2 = parameters[a2]
    //.n = calendar[dayOfYear]    //Niels
  }
  Salinity fsalinity {
  .S = env[S]
  }
  Effectoftemperatureongrowthrate ftemp {
    .T = env[T]
  }
  Effectofsizeongrowthrate farea {
    .A = area[A]
    .A0 = parameters[A0]
  .m1 = parameters[m1]
  .m2 = parameters[m2]
  }
  Arealost arealost {
  .A = area[A]
  .C = carboncontent[C]
  }
  Area area {
    .Ainit = inputs[Ainit]
  .fronderosion = fronderosion[fronderosion]
  .Alost = arealost[Alost]
    .u = specificgrowthrate[specificgrowthrate]
  .Factor = 1
  }
  Specificgrowthrate specificgrowthrate {
    .farea = farea[farea]
    .fphoto = fphoto[fphoto]
    .ftemp = ftemp[ftemp]
  .fsalinity = fsalinity[fsalinity]
    .N = nitrogencontent[N]
    .C = carboncontent[C]
  .Nmin =  parameters[Nmin] 
  }
  Rateofchangeincarbonreserves rateofchangeincarbonreserves {
    .Gphotosynthesis = grossphotosynthesis[Gphotosynthesis]
    .Cexudation = carbonexudation[carbonexudation]
    .Respiration = respiration[respiration]
    .C = carboncontent[C]
    .u = specificgrowthrate[specificgrowthrate]
  }
  Rateofchangeinnitrogenreserves rateofchangeinnitrogenreserves {
    .J = nitrateuptakerate[Nuptakerate]
    .u = specificgrowthrate[specificgrowthrate]
    .N = nitrogencontent[N]
  }
  Rateofchangeoffrondarea rateofchangeoffrondarea {
    .u = specificgrowthrate[specificgrowthrate]
    .A = area[A]
    .fronderosion = fronderosion[fronderosion]
  }
  Dryweight dryweight {
  .A = area[A]
  .N = nitrogencontent[N]
  .C = carboncontent[C]
  }
  Structuraldryweight structuraldryweight {
  .A = area[A]
  }
  Wetweight wetweight {
  .A = area[A]
  .N = nitrogencontent[N]
  .C = carboncontent[C]
  }
  Totalcarbon totalcarbon {
  .C = carboncontent[C]
  .Ws = structuraldryweight[Ws]
  }
  Totalnitrogen totalnitrogen {
  .N = nitrogencontent[N]
  .Ws = structuraldryweight[Ws]
  }
  Yieldprm yield {
  .Iden = inputs[Iden]
  .Ww = wetweight[Ww]
  }
  OutputR {
    .end = "alge-end-2017.R"
    OutputText {
      .ports = (calendar[dateTime] area[A])
    }
  }
}