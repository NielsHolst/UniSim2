// food-web-2.box
Simulation sim {
  .steps = 3650 //1085
  Calendar calendar {
    .initialDateTime = 1/1/2009 
  }
  Records weather {
    .fileName = "weather/flakkebjerg 2009.txt"
    .cycle = TRUE 
  }
  
  // Prey / Host
  Box butterfly {
    Stage egg {
      .initial = 100 
      .inflow = ../adult/oviposition[outflow] 
      .duration = 140
      .timeStep = ./time[value]
      .instantLossRate = web/butterflyEgg[lossRatio]
      OnOff time { 
        .x = calendar[dayOfYear]
        .xOn = 107    
        .xOff = 152   
        .valueOn = ./dayDegrees[step]
        .valueOff = 0
        DayDegrees dayDegrees {
          .T0 = 5
          .T = weather[Tavg]
        }
      }
    }
    Stage larva {
      .inflow = ../egg[outflow]
      .duration = 200
      .timeStep = ./time[step]
      .instantLossRate = web/butterflyLarva[lossRatio]
      .growthFactor = ./competitionSurvival[signal]
      DayDegrees time {
        .T0 = 8
        .T = weather[Tavg]
      }
      ProportionalSignal competitionSurvival {
        .input = ..[content]
        .threshold = 300
        .thresholdBand = 200
        .minSignal = 0.001
        .maxSignal = 1
        .increasingSignal = FALSE
      }
    }
    Stage pupa {
      .inflow = ../larva[outflow]
      .duration = 100
      .timeStep = ./time[step]
      DayDegrees time {
        .T0 = 10
        .T = weather[Tavg]
      }
    }
    Box adult {
      Stage adult {
        .inflow = ../../pupa[outflow]
        .duration = 28
        .timeStep = 1
      }
      Stage preOviposition {
        .inflow = ../../pupa[outflow]
        .duration = 5
        .timeStep = 1
      }
      Stage oviposition {
        .inflow = ../preOviposition[outflow]
        .duration = 10
        .timeStep = 1
        .growthFactor = 40
      }
    }
  }
  
  // Parasitoid
  Box trichogramma {
    DayDegrees dayDegrees {
      .T0 = 9
      .T = weather[Tavg]
    }
    Stage juvenile {
      .inflow = web/trichogrammaAdult[supply]
      .duration = 50
      .timeStep = ../dayDegrees[step]
      .growthFactor = 0.2
      .instantLossRate = ./winterKill[value]
      OnOff winterKill { 
        .x = calendar[dayOfYear]
        .xOn = 330
        .xOff = 330   
        .valueOn = 0.9
        .valueOff = 0
      }
    }
    Box adult {
      OnOff winterKill { 
        .x = calendar[dayOfYear]
        .xOn = 330
        .xOff = 330   
        .valueOn = 1
        .valueOff = 0
      }
      Stage individuals {
        .initial = 0.5 
        .inflow = ../../juvenile[outflow]
        .duration = 130
        .k = 2
        .timeStep|prod = ../../dayDegrees[step] | ./time[value] | ./sd[signal]
        .instantLossRate = ../winterKill[value]
        OnOff time { 
          .x = calendar[dayOfYear]
          .xOn = 0 
          .xOff = 300   
          .valueOn = 1
          .valueOff = 0
        }
        ProportionalSignal sd {
          .input = web/trichogrammaAdult[supplyDemandRatio]
          .threshold = 0.05
          .thresholdBand = 0.95
          .minSignal =  0.05
          .maxSignal = 1
        }
      }
      Stage oviposition {
        .inflow   = ../individuals[outflow]
        .initial  = ../individuals[initial] 
        .duration = ../individuals[duration]
        .k        = ../individuals[k]
        .timeStep = ../individuals[timeStep]
        .growthFactor = 25      
        .instantLossRate = ../winterKill[value]
      }
    }
  }
  
  // Predator
  Box carabus {
    DayDegrees dayDegrees {
      .T0 = 8
      .T = weather[Tavg]
    }
    Stage egg {
      .inflow = web/carabusAdult[supply]
      .duration = 50
      .timeStep = ../dayDegrees[step]
      .growthFactor = 0.2
    }
    Stage larva {
      .inflow = ../egg[outflow]
      .duration = 250
      .timeStep = ../dayDegrees[step]
      .growthFactor = ./competitionSurvival[signal]
      ProportionalSignal competitionSurvival {
        .input = ..[content]
        .threshold = 30
        .thresholdBand = 20
        .minSignal = 0.05
        .maxSignal = 1
        .increasingSignal = FALSE
      }
    }
    Stage pupa {
      .inflow = ../larva[outflow]
      .duration = 70
      .timeStep = ../dayDegrees[step]
      .growthFactor = 0.8
    }
    Box adult {
      Stage individuals {
        .initial = 5 
        .inflow = ../../pupa[outflow]
        .duration = 200
        .k = 2
        .timeStep|prod = ../../dayDegrees[step] | ./sd[signal]
        ProportionalSignal sd {
          .input = web/carabusAdult[supplyDemandRatio]
          .threshold = 0.6
          .thresholdBand = 0.4
          .minSignal =  0.6
          .maxSignal = 1
        }
      }
      Stage oviposition {
        .inflow   = ../individuals[outflow]
        .initial  = ../individuals[initial] 
        .duration = ../individuals[duration]
        .k        = ../individuals[k]
        .timeStep = ../individuals[timeStep]
        .growthFactor = 35      
      }
    }
  }
  
  // Food web
  FoodWeb web {
    .attackFile = "food-web-2-attack-matrix.txt"
    .gainFile = "food-web-2-gain-matrix.txt"
    .showMatrices = TRUE
    FoodWebBox butterflyEgg {
      .density = butterfly/egg[content]
    }
    FoodWebBox butterflyLarva {
      .density = butterfly/larva[content]
    }
    FoodWebBox trichogrammaAdult {
      .density = trichogramma/adult/individuals[content]
      .demand  = trichogramma/adult/oviposition[outflow]
    }
    FoodWebBox carabusAdult {
      .density = carabus/adult/individuals[content]
      .demand  = carabus/adult/oviposition[outflow]
    }
  }
  
  // Output
  OutputR output {
    +ggplot2 = "geom_line(size=1.1) + 
                    scale_x_datetime(
                      breaks = date_breaks('4 months'), 
                      labels = date_format('%b')
                    ) + 
                    ylim(0,NA)" 
    +ggplot = "geom_line(size=1.1) + 
                    scale_x_datetime(
                      breaks = date_breaks('years'),
                      labels = date_format('%y')
                    ) + 
                    ylim(0,NA)" 
    PageR butterfly {
      .xAxis = calendar[date]
      .title = "Butterfly"
      PlotR {
        .ports = (butterfly/*[content] butterfly/adult/*[content])
        .ggplot = output[ggplot]
        .transform = "log10"
      }
    }
    PageR trichogramma {
      .xAxis = calendar[date]
      .title = "Trichogramma"
      PlotR {
        .ports = (trichogramma/*[content] trichogramma/adult/*[content])
        .ggplot = output[ggplot]
        .transform = "log10"
      }
    }
    PageR carabus {
      .xAxis = calendar[date]
      .title = "Carabus"
      PlotR {
        .ports = (carabus/*[content] carabus/adult/*[content])
        .ggplot = output[ggplot]
        .transform = "log10"
      }
    }
    PageR web {
      .xAxis = calendar[date]
      .ncol = 4 
      .title = "Food web"
      PlotR {
        .ports = web/*[supply]
        .ggplot = output[ggplot]
      }
      PlotR {
        .ports = web/*[loss]
        .ggplot = output[ggplot]
      }
      PlotR {
        .ports = web/*[supplyDemandRatio]
        .ggplot = output[ggplot]
      }
      PlotR {
        .ports = web/*[lossRatio]
        .ggplot = output[ggplot]
      }
    }
    // .keepPages = TRUE
    // PageR web {
      // .xAxis = calendar[date]
      // .title = "Food web"
      // PlotR {
        // .ports = (butterflyEgg[density] 
                  // trichogrammaAdult[density] 
                  // trichogrammaAdult[demand] 
                  // trichogrammaAdult[supply] 
                  // trichogrammaAdult[supplyDemandRatio]
                  // butterflyEgg[lossRatio]
                  // weather[Tavg] 
                  // trichogramma/adult/individuals[timeStep]
                  // )
        // .ggplot = *[monthBreaks]
      // }
    // }
  }
}

