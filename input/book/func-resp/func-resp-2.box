// func-resp-2.box
Simulation {
  .steps = 100
  .iterations = 3
  Sequence predator {
    .by = "reset"
    .values = (0.5 1 20)
  }
  Sequence prey {
    .by = "update"
    .min = 0
    .max = 100
  }
  Box budget {
    +respirationDemand = 1
    +conversionCost = 0.15
    +egested = 0.2
  }
  DemandBudget demandBudget {
    .netDemand = 10
    .respirationDemand = ../budget[respirationDemand]
    .conversionCost = ../budget[conversionCost]
    .egested = ../budget[egested]
  }
  FunctionalResponse funcResp {
    .attacker = predator[value]
    .resource = prey[value]
    .demand = ../demandBudget[demand]
    .attackRate = 0.8
  }
  SupplyBudget supplyBudget {
    .resourceAcquired = ../funcResp[resourceAcquired]
    .respirationDemand = ../budget[respirationDemand]
    .conversionCost = ../budget[conversionCost]
    .egested = ../budget[egested]
  }
  OutputR {
    PageR {
      .xAxis = prey[value]
      .title = "Functional response at predator density = 0.5, 1 and 20"
      PlotR {
        .layout = "merged"
        .ports = (funcResp[demand] funcResp[resourceAcquired]
                   supplyBudget[supply] supplyBudget[egestedAmount] 
                   supplyBudget[conversionCostAmount])
        .ggplot = "geom_line(size=1.1) + labs(x='Prey density', y='Budget component')"
      }
    }
  }
 }