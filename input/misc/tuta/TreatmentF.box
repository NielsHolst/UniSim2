//Functional responce (Nesidiocoris and Tuta) with linear degree day model

Simulation sim {
  .steps = 220  //238
  .iterations = 3
  .silent = TRUE
  
  SensitivityAnalysis {
    .method = "LHS"
  }
  Calendar calendar {
    .initialDateTime = 30/5/2016  //24/5/2016 
  }
  Records weather {
    .fileName = "Varamin 2016.txt"
    .cycle = TRUE 
  }
  // Box weather {
     // +Tavg = 28 @(uniform 25 31)
  // }
  ProportionalSignal CageTemperature {
     .input = weather[Tavg]
     .minSignal = 28 @(uniform 25 29)//15  14.7
     .maxSignal = 30 @(uniform 29.1 31)//33
     .threshold = 17  //21
     .thresholdBand = 5 //10
    // outputs temperature
    // refer to this as cage[temperature]
  }
  
  // Box random {
    // RandomUniform Tinitial {
      // .minValue = 4
      // .maxValue = 8
      // .drawAtReset = TRUE
    // }
  // }
  // Box random {
    // RandomUniform kValue {
      // .minValue = 50
      // .maxValue = 90
      // .drawAtReset = TRUE
    // }
  // }
  //Tuta Box
  Box Tabsoluta {
    Stage egg {
      .inflow = ../oviposition[outflow] 
      .duration = 58.5
      .timeStep = ./time[step]
      .growthFactor = ./survival[survival]// 0.897
      .instantLossRate = web/tutaEgg[lossRatio]
      TutaSurvival survival {
          .T = CageTemperature[signal] //weather [Tavg] 
          .a0 = 0
          .a1 = -0.000691
          .a2 = 0.0615
          .a3 = -2.0329
          .a4 = 29.213
          .a5 = -75.5
          .A = 0.72
          .scaling = 1
      }
      DayDegrees time {
      .T0 = 9.6
      .T = CageTemperature[signal] // weather [Tavg] 
      }
    }
    Stage larva {
      .inflow = ../egg[outflow]
      .duration = 227.3
      .timeStep = ./time[step]
      .growthFactor = ./survival[survival] //0.9506
      TutaSurvival survival {
        .T =  CageTemperature[signal] //weather [Tavg]
        .a0 = -0.000245
        .a1 = 0.0235
        .a2 = -0.8579
        .a3 = 14.717
        .a4 = -115.94
        .a5 = 397.13
        .A = 0.7
        .scaling = TutaCapacity [factor]
      }
      DayDegrees time {
        .T0 = 6.7
        .T = CageTemperature[signal] //weather [Tavg]  
      }
      Capacity TutaCapacity {
    
    .pestNumber = larva[content]
    .K = 85  //@(uniform 50 150)//random/kValue [value] 
    }
    }
    Stage pupa {
      .inflow = ../larva[outflow]
      .duration = 131.6
      .timeStep = ./time[step]
      .growthFactor = ./survival[survival] //0.8767
      TutaSurvival survival {
        .T = CageTemperature[signal] //weather [Tavg] 
        .a0 = 0.0000519
        .a1 = -0.0069
        .a2 = 0.327
        .a3 = -7.176
        .a4 = 74.615
        .a5 = -208.35
        .A = 0.72
        .scaling = 1
       }
      DayDegrees time {
        .T0 = 7.3
        .T = CageTemperature[signal] //weather [Tavg] 
      }
    }
    Stage adult {
      .initial = 8 //random/Tinitial[value]
      .inflow = ../pupa[outflow]
      .duration = 25
      .timeStep = 1
    }
    Stage oviposition {
      .initial = ../adult[initial]
      .inflow = ../pupa[outflow]
      .duration = 23.5
      .timeStep = 1
      .growthFactor =  ./fecundity[fecundity]
      TutaFecundity fecundity {
        .T = CageTemperature[signal] //weather [Tavg] 
        .a0 = -0.00105  //-0.00124 
        .a1 = 0.03244 //0.032448
        .a2 = 0.1592
        .a3 = -6.7658
        .a4 = 47.55
      }
    }
    
  } // end Tabsoluta

  // Ntenuis
  
  // Nesidiocoris Box
  Box Ntenuis {
    Stage egg {
      .inflow = web/adultP[supply]
      .duration = 140.7
      .timeStep = ./time[step]
      DayDegrees time {
        .T0 = 9.8
        .T = CageTemperature[signal]//weather [Tavg] 
      }
    }
    Stage nymph {
      .inflow = ../egg[outflow]
      .duration = 175
      .timeStep = ./time[step]
      .growthFactor = ./survival[survival] //0.89
      NesidiocorisSurvival survival {
        .T = CageTemperature[signal] //weather [Tavg]
        .a0 = -0.0072
        .a1 = 0.7287
        .a2 = -27.471
        .a3 = 457.03
        .a4 = -2752.5
        .scaling = NesidiocorisCapacity [factor]
      }
      DayDegrees time {
        .T0 = 11.7
        .T = CageTemperature[signal]//weather [Tavg] 
      }
      Capacity NesidiocorisCapacity {
    
    .pestNumber = nymph[content]
    .K = 25 //@(uniform 10 40)
    }
    }
    Stage adult {
      // .initial = introduction[value]
      .inflow|sum = ../nymph[outflow] | introduction[value]
      .duration = 19
      .timeStep = 1
      
      OnOff introduction {
        .x = calendar[dayOfYear]
        .xOn = 161
        .xOff = 162
        .valueOn = 2 //@(uniform 1 10)
        .valueOff = 0
      }
    }
    Stage oviposition {
      //.initial=../adult[initial]
      .inflow|sum = ../nymph[outflow] | introduction[value]
      .duration = 14
      .timeStep = 1
      .growthFactor = ./fecundity[fecundity]
      NesidiocorisFecundity fecundity {
        .T = CageTemperature[signal]//weather [Tavg] 
        .a0 = -0.00111
        .a1 = 0.12225
        .a2 = -4.9751
        .a3 = 88.655
        .a4 = -566.75
      }
    }
  } // end Ntenuis
  // Trichogramma
  Box Trichogramma {
      
      Stage adult {
        .inflow =../parasitoid[value]
        .duration = 5
        .timeStep = 1
      }
    Parasitoid parasitoid {
      .date = calendar[date]
      .firstDate = 6/6/2016
      .number = 10 //@(uniform 10 70)
     }
      Stage oviposition {
        .inflow = ../parasitoid[value]
        .duration = 5
        .timeStep = 1
        .growthFactor = 19
     }
      Stage egg {
        .inflow = web/parasitoid [supply]     
     }
    }//end Trichogramma
    
    // Food web
  FoodWeb web {
    .attackFileFirst = "txt/attackFG1.txt"
    .attackFile = ./fileName[value] 
    .gainFile = "txt/gainFG.txt"
    .showMatrices = TRUE

    NumberedFile fileName {
      .fileName = "txt/attackFG.txt"
      .number = sim[iteration]
    }

    
    FoodWebBox tutaEgg {
      .density = Tabsoluta/egg[content]
    }
    FoodWebBox parasitizedEgg {
      .density = Trichogramma/egg[content]
    }
    FoodWebBox adultP {
      .density = Ntenuis/adult[content]
      .demand  = Ntenuis/oviposition[outflow]
    }
    FoodWebBox parasitoid {
      .density = Trichogramma/parasitoid[value]
      .demand  = Trichogramma/oviposition[outflow]
    }
    FoodWebPopulation nymphP {
      .demandPerCap = 25
      .density = Ntenuis/nymph[content]
    }
  } //end Food web
  
  
  //plotting
  
  OutputR output {
    PageR {
      PlotR {
        .ports = (adult[content])
      }
    }
    OutputText {
      .ports = web[attackFile]
    }
  }  
} // end Simulation