Simulation greenhouse { // #227
  .iterations = 96
  .steps = 300
  .silent = TRUE
  Box random {
    RandomiserSobolSequence randomiser {
      .doSensitivityAnalysis = TRUE
      .bootstrapSize = 100
    }
    RandomUniform screen1 {
      .min = 0
      .max = 1.
    }
    RandomUniform vents {
      .min = 0
      .max = 1.
    }
    RandomUniform Tout {
      .min = 0.
      .max = 5.
    }
    RandomUniform windspeed {
      .min = 0.
      .max = 18.
    }
    // RandomUniform radiation {
      // .min = 0.
      // .max = 800.
    // }
  }
  Calendar calendar {
    .timeStep = 1
    .timeUnit = "m"
  }
  Outdoors outdoors {
    .temperature = random/Tout[value] //12.
    .rh = 80.
    .radiation = 400. //random/radiation[value] 
    .windSpeed = random/windspeed[value] //4.
    .skyTemperature = 10.
  }
  Box actuators {
    Box screens {
      Box layer1 {
        +value = random/screen1[value]
      }
    }
    Box vents {
      +state = random/vents[value]
    }
  }
  GrowthLights growthLights {
    GrowthLight  {
      .on = TRUE
      .intensity = 40
    }
    GrowthLight  {
      .on = TRUE
      .intensity = 80
    }
  }
  Box heating {
    Box energyFlux {
      +energyFlux = 150
    }
  }
  Box indoors {
    IndoorsHumidity humidity {
    }
    Box co2 {
      +value = 800.
    }
    IndoorsWindSpeed windSpeed {
    }
  }
  Box construction { // #43
    vg::Geometry geometry { // #8
      .orientation = 0.0
      .numSpans = 26
      .spanWidth = 4.0
      .length = 100.0
      .height = 4.0
      .roofPitch = 26.0
      .reflection = 0.2
    }
    vg::Shelter shelter { // #41
      vg::ShelterFace roof1 { // #14
        vg::ShelterFaceArea area {
        }
        vg::Cover cover { // #9
          .swReflectivityTop      = 0.08  // cf. UV!
          .swReflectivityBottom   = 0.08  // cf. UV!
          .swTransmissivityTop    = 0.89
          .swTransmissivityBottom = 0.89
          .lwReflectivityTop      = 0.1
          .lwReflectivityBottom   = 0.1
          .lwTransmissivityTop    = 0.0
          .lwTransmissivityBottom = 0.0
          .Ubottom = 1.247
          .UwindMinimum = 6.5
          .specificHeatCapacity = 6988
        }
        vg::Screens screens { // #12
          vg::ScreenRoof layer1 { // #11
            .swReflectivityTop = 0.05
            .swReflectivityBottom = 0.05
            .swTransmissivityTop = 0.4
            .swTransmissivityBottom = 0.4
            .lwReflectivityTop = 0.05
            .lwReflectivityBottom = 0.05
            .lwTransmissivityTop = 0.4
            .lwTransmissivityBottom = 0.4
            .Utop = 1.247
            .Ubottom = 1.247
            .specificHeatCapacity = 2313
            .transmissivityAir = 1.0
            .state = actuators/screens/layer1[value]
          }
        }
        Vent vent { //amended // #13
          .number = geometry[numSpans]
        }
      }
      vg::ShelterFace roof2 { // #20
        vg::ShelterFaceArea area {
        }
        vg::Cover cover { // #9
          .swReflectivityTop      = 0.08  // cf. UV!
          .swReflectivityBottom   = 0.08  // cf. UV!
          .swTransmissivityTop    = 0.89
          .swTransmissivityBottom = 0.89
          .lwReflectivityTop      = 0.1
          .lwReflectivityBottom   = 0.1
          .lwTransmissivityTop    = 0.0
          .lwTransmissivityBottom = 0.0
          .Ubottom = 1.247
          .UwindMinimum = 6.5
          .specificHeatCapacity = 6988
        }
        vg::Screens screens { // #12
          vg::ScreenRoof layer1 { // #11
            .swReflectivityTop = 0.05
            .swReflectivityBottom = 0.05
            .swTransmissivityTop = 0.4
            .swTransmissivityBottom = 0.4
            .lwReflectivityTop = 0.05
            .lwReflectivityBottom = 0.05
            .lwTransmissivityTop = 0.4
            .lwTransmissivityBottom = 0.4
            .Utop = 1.247
            .Ubottom = 1.247
            .specificHeatCapacity = 2313
            .transmissivityAir = 1.0
            .state = actuators/screens/layer1[value]
          }
        }
        Vent vent { //amended // #19
          .number = geometry[numSpans]
        }
      }
      vg::ShelterFace side1 { // #25
        vg::ShelterFaceArea area {
        }
        vg::Cover cover { // #9
          .swReflectivityTop      = 0.08  // cf. UV!
          .swReflectivityBottom   = 0.08  // cf. UV!
          .swTransmissivityTop    = 0.89
          .swTransmissivityBottom = 0.89
          .lwReflectivityTop      = 0.1
          .lwReflectivityBottom   = 0.1
          .lwTransmissivityTop    = 0.0
          .lwTransmissivityBottom = 0.0
          .Ubottom = 1.247
          .UwindMinimum = 6.5
          .specificHeatCapacity = 6988
        }
        vg::Screens screens { // #12
          vg::ScreenWall layer1 { // #11
            .swReflectivityTop = 0.05
            .swReflectivityBottom = 0.05
            .swTransmissivityTop = 0.4
            .swTransmissivityBottom = 0.4
            .lwReflectivityTop = 0.05
            .lwReflectivityBottom = 0.05
            .lwTransmissivityTop = 0.4
            .lwTransmissivityBottom = 0.4
            .Utop = 1.247
            .Ubottom = 1.247
            .specificHeatCapacity = 2313
            .transmissivityAir = 1.0
            .state = actuators/screens/layer1[value]
          }
        }
      }
      vg::ShelterFace side2 { // #30
        vg::ShelterFaceArea area {
        }
        vg::Cover cover { // #9
          .swReflectivityTop      = 0.08  // cf. UV!
          .swReflectivityBottom   = 0.08  // cf. UV!
          .swTransmissivityTop    = 0.89
          .swTransmissivityBottom = 0.89
          .lwReflectivityTop      = 0.1
          .lwReflectivityBottom   = 0.1
          .lwTransmissivityTop    = 0.0
          .lwTransmissivityBottom = 0.0
          .Ubottom = 1.247
          .UwindMinimum = 6.5
          .specificHeatCapacity = 6988
        }
        vg::Screens screens { // #12
          vg::ScreenWall layer1 { // #11
            .swReflectivityTop = 0.05
            .swReflectivityBottom = 0.05
            .swTransmissivityTop = 0.4
            .swTransmissivityBottom = 0.4
            .lwReflectivityTop = 0.05
            .lwReflectivityBottom = 0.05
            .lwTransmissivityTop = 0.4
            .lwTransmissivityBottom = 0.4
            .Utop = 1.247
            .Ubottom = 1.247
            .specificHeatCapacity = 2313
            .transmissivityAir = 1.0
            .state = actuators/screens/layer1[value]
          }
        }
      }
      vg::ShelterFace end1 { // #35
        vg::ShelterFaceArea area {
        }
        vg::Cover cover { // #9
          .swReflectivityTop      = 0.08  // cf. UV!
          .swReflectivityBottom   = 0.08  // cf. UV!
          .swTransmissivityTop    = 0.89
          .swTransmissivityBottom = 0.89
          .lwReflectivityTop      = 0.1
          .lwReflectivityBottom   = 0.1
          .lwTransmissivityTop    = 0.0
          .lwTransmissivityBottom = 0.0
          .Ubottom = 1.247
          .UwindMinimum = 6.5
          .specificHeatCapacity = 6988
        }
        vg::Screens screens { // #12
          vg::ScreenWall layer1 { // #11
            .swReflectivityTop = 0.05
            .swReflectivityBottom = 0.05
            .swTransmissivityTop = 0.4
            .swTransmissivityBottom = 0.4
            .lwReflectivityTop = 0.05
            .lwReflectivityBottom = 0.05
            .lwTransmissivityTop = 0.4
            .lwTransmissivityBottom = 0.4
            .Utop = 1.247
            .Ubottom = 1.247
            .specificHeatCapacity = 2313
            .transmissivityAir = 1.0
            .state = actuators/screens/layer1[value]
          }
        }

      }
      vg::ShelterFace end2 { // #40
        vg::ShelterFaceArea area {
        }
        vg::Cover cover { // #9
          .swReflectivityTop      = 0.08  // cf. UV!
          .swReflectivityBottom   = 0.08  // cf. UV!
          .swTransmissivityTop    = 0.89
          .swTransmissivityBottom = 0.89
          .lwReflectivityTop      = 0.1
          .lwReflectivityBottom   = 0.1
          .lwTransmissivityTop    = 0.0
          .lwTransmissivityBottom = 0.0
          .Ubottom = 1.247
          .UwindMinimum = 6.5
          .specificHeatCapacity = 6988
        }
        vg::Screens screens { // #12
          vg::ScreenWall layer1 { // #11
            .swReflectivityTop = 0.05
            .swReflectivityBottom = 0.05
            .swTransmissivityTop = 0.4
            .swTransmissivityBottom = 0.4
            .lwReflectivityTop = 0.05
            .lwReflectivityBottom = 0.05
            .lwTransmissivityTop = 0.4
            .lwTransmissivityBottom = 0.4
            .Utop = 1.247
            .Ubottom = 1.247
            .specificHeatCapacity = 2313
            .transmissivityAir = 1.0
            .state = actuators/screens/layer1[value]
          }
        }
      }
    }
  }
  Box ventilation {
    VentilationTotal total {
      .leakage = 0
    }
    VentilationNet net {
    }
  }
  vg::EnergyBudget energyBudget {
  }
  vg::WaterBudget waterBudget {
  }  
  vg::Crop crop {
  }
  OutputR output { 
    Box p {
      +coverT = energyBudget/cover[temperature]
      +screenedT = screened[temperature]
      +screenT = energyBudget/screen1[temperature]
      +roomT = room[temperature]
      +cropT = energyBudget/crop[temperature]
      // +leafPar = energyBudget/crop[parAbsorbed]
      // +leafSw = energyBudget/crop[swAbsorbed]
      // +leafLw = energyBudget/crop[lwAbsorbed]
      +wfSum         = waterBudget[vapourFluxSum]
      +wfVentilation = waterBudget/ventilation[vapourFlux]
      +wfTransp      = waterBudget/transpiration[vapourFlux]
      +wfCrop        = waterBudget/condensationCrop[vapourFlux]
      +wfCover       = waterBudget/condensationCover[vapourFlux]
      +wfScreen      = waterBudget/condensationScreen1[vapourFlux]
      +rh            = indoors/humidity[rh]
      +propRoom      = ventilation/net[roomProp]
      +propScr       = ventilation/net[screenedProp]
    }
  
    // PageR {
      // .width = 14
      // .height = 10
      // .ncol = 2
      // PlotR {
        // .ports = p[*]
      // }
      // PlotR {
        // .ports = (
          // rs[*]
        // )
      // }
    // }

          // energyBudget/*[swAbsorbed]|end

    PageR {
      .xAxis = random/*[value]
      .width = 10
      .height = 10
      PlotR {
        .ports = (
            p[*]|end
        )
        .ggplot = "geom_smooth(colour='yellow')"
      }
    }

    // PageR {
      // .xAxis = random/*[value]
      // .width = 10
      // .height = 4
      // PlotR {
        // .ports = ../../outputs[*]|end
        // .type = "SobolConvergence"
        // .fontSize = 11
      // }
    // }
  }
}
