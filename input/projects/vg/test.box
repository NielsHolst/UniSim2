Simulation {
  .iterations = 5
  .steps = 5
  SensitivityAnalysis {
  }
  Calendar calendar {
    .timeStep = 5
    .timeUnit = "m"
  }
  Accumulator crackVentilation {
    .change = ./controller[controlVariable]
    PidController controller {
      .desiredValue = ./desiredVentilation[signal]
      .sensedValue = ..[value]
      .Kprop = 0.02 // @(uniform 0 0.1)
      ProportionalSignal desiredVentilation {
        .input = 100      @(uniform 50 100)
        .threshold = 80   // setpoints/humidity/maximumRh[signal]
        .thresholdBand = 10
        .increasingSignal = TRUE
        .maxSignal = ./maxVentilation[signal]
        .minSignal = 0
        ProportionalSignal maxVentilation {
          .input = 20       // outdoors[temperature]
          .threshold = -5
          .thresholdBand = 1
          .increasingSignal = TRUE
          .maxSignal = 4 
          .minSignal = 0
        }
      }
    }
  }
  OutputR {
    .keepPlots = TRUE
    PageR {
      .xAxis = calendar[time]
      PlotR {
        .layout = "merged"
        .ports = crackVentilation[value]
        .ggplot =  "geom_point() + 
                   geom_line() +
                   labs(color='Kprop') +
                   scale_colour_hue(labels=round(unique(sim$Kprop),3))"
                   // theme(legend.position='none')"
      }
      PlotR {
        .ports = (controller[Kprop] desiredVentilation[input])
        .hide = TRUE
      }
    }
  }
}