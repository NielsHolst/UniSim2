// vg/pid-controller.box
Simulation {
	.iterations = 5
	.steps = 60
	SensitivityAnalysis {
	}
	Calendar calendar {
		.timeStep = 5
		.timeUnit = "m"
	}
	Accumulator crackVentilation {
		.change = ./controller[controlVariable]
		PidController controller {
			.desiredValue = ./desiredVentilation[signal]
			.sensedValue = ..[value]
			.Kprop = 0.02 @(loguniform 0.01 0.1)
			ProportionalSignal desiredVentilation {
				.input = 100       // indoors/humidity[rh]
				.threshold = 80   // setpoints/humidity/maximumRh[signal]
				.thresholdBand = 10
				.increasingSignal = TRUE
				.maxSignal = ./maxVentilation[signal]
				.minSignal = 0
				ProportionalSignal maxVentilation {
					.input = 20	     // outdoors[temperature]
					.threshold = -5
					.thresholdBand = 1
					.increasingSignal = TRUE
					.maxSignal = 4 
					.minSignal = 0
				}
			}
		}
	}
	OutputR {
		.end = "pid-controller-plot.R"
		OutputText {
			.ports = (calendar[time] crackVentilation[value] controller[Kprop])
		}
	}
}